/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lars' at '23.10.14 21:41' with Gradle 1.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'ivy-publish'

group = 'com.infodesire'
version = '0.1-SNAPSHOT'
httpPort = 8081
stopPort = 8082
stopKey = 10


mainClassName = "com.infodesire.wikipower.web.WebServer"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

jar {
	from 'build/distributions/sample-wiki.zip' 
}

war {
	from( 'build/distributions/sample-wiki.zip' ) {
		into 'WEB-INF/classes'
	}
}


task sample(type: Zip) {
	classifier = 'sample'
    from 'sample-wiki'
    include '**/*'
    archiveName 'sample-wiki.zip'
}

jar.dependsOn sample
war.dependsOn sample

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    repositories {
	    mavenCentral()
	    
	    // team repo (because it's no public yet)
		ivy {
		// there is a lot of legacy to adhere to here:
		        url 'http://edge/s/repository/maven'
		        layout 'pattern' , {
	                artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
	            }
	    }
	    
/*	    
	    ivy {
	        url "file:///Users/lars/develop/localrepo"
	        layout "pattern", {
	            artifact "[organization]/[artifact]_[revision].[ext]"
	            artifact "[organization]/[artifact]-[revision].[ext]"
	        }
	    }
*/

	}	
}


/* 
* Call bower to install javascript dependencies
*/
task bowerInstall(type: Exec) {
    workingDir '.'
    executable = 'bower'
    args = ['install']
}

war.dependsOn bowerInstall
jettyRun.dependsOn bowerInstall

war {
//	archiveName = warArchiveName
	from( '.' ) {
		include 'bower_components/**'
		exclude 'bower_components/jquery/src/**'
	}
}

jettyRunWar {
//    daemon = true 
}


// open the browser with the url (TODO: let it wait a second, so we don't new RELOAD page)
task openUrlInBrowser << {
   java.awt.Desktop.desktop.browse "http://localhost:8081/wikipower".toURI()
}
jettyRun.dependsOn openUrlInBrowser
jettyRunWar.dependsOn openUrlInBrowser
openUrlInBrowser.shouldRunAfter war
openUrlInBrowser.shouldRunAfter classes


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile (
    	//'org.slf4j:slf4j-api:1.7.5',
    	'commons-io:commons-io:2.4',
    	'com.infodesire:wikitext-all:0.1-SNAPSHOT',
    	'com.infodesire:bsmcommons:0.1-SNAPSHOT',
    	'servletapi:servlet-api:2.4',
    	'org.eclipse.jetty:jetty-server:9.2.3.v20140905',
    	'org.eclipse.jetty:jetty-servlet:9.2.3.v20140905',
    	'commons-cli:commons-cli:1.2',
    	'org.apache.httpcomponents:httpcore:4.3.2',
    	'org.apache.httpcomponents:httpclient:4.3.5',
    	'log4j:log4j:1.2.17',
    	'com.google.guava:guava:18.0'
    	
    )

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
	publications {
		ivyJava( IvyPublication ) {
			from components.java
			artifact(sourcesJar) {
                type "source"
                conf "runtime"
            }
		}
	}
	repositories {
		ivy {
			// there is a lot of legacy to adhere to here:
	    	url 'file://s/repository/maven'
	    	layout 'pattern' , {
	            artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
	        }
	    }
	}
}
